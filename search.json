[{"path":"https://docs.ropensci.org/rinat/articles/rinat-intro.html","id":"about","dir":"Articles","previous_headings":"","what":"About","title":"Access iNaturalist data through APIs","text":"rinat wrapper iNaturalist APIs accessing observations. detailed documentation API available iNaturalist website part larger species occurrence searching packages SPOCC.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rinat/articles/rinat-intro.html","id":"get-observations","dir":"Articles","previous_headings":"Quickstart guide","what":"Get observations","title":"Access iNaturalist data through APIs","text":"get_inat_obs() primary function retrieves observations iNaturalist. text taxon search can refined observation date, record quality location. recommended set quality argument \"research\" order get reliable data validated several contributors.","code":""},{"path":"https://docs.ropensci.org/rinat/articles/rinat-intro.html","id":"fuzzy-search","dir":"Articles","previous_headings":"Quickstart guide > Get observations","what":"Fuzzy search","title":"Access iNaturalist data through APIs","text":"can search observations either common scientific name. search entire iNaturalist database, search return entries mention Monarch butterflies, just Monarch observations. Note get_inat_obs() return 100 observations default. can controlled maxresults argument. Another use fuzzy search searching habitat, e.g. searching observations might happen vernal pool. can explore taxon names found.","code":"library(rinat) monarchs <- get_inat_obs(query = \"Monarch Butterfly\", year = 2021) unique(monarchs$scientific_name) #> [1] \"Danaus plexippus\" \"Danaina\" vp_obs <- get_inat_obs(query = \"vernal pool\") # see the first few taxa head(unique(vp_obs$scientific_name)) #> [1] \"Lithobates sylvaticus\"         \"Euphorbia hooveri\"             \"Pseudognaphalium californicum\" #> [4] \"Calanoida\"                     \"Scapholeberis\"                 \"Naididae\""},{"path":"https://docs.ropensci.org/rinat/articles/rinat-intro.html","id":"taxon-search","dir":"Articles","previous_headings":"Quickstart guide > Get observations","what":"Taxon search","title":"Access iNaturalist data through APIs","text":"return records specific species taxonomic group, use taxon_name argument. example, return observations anything Nymphalidae family, restricting search year 2015: return Monarch butterfly observations also mention term “chrysalis”:","code":"nymphalidae <- get_inat_obs(taxon_name  = \"Nymphalidae\", year = 2015) # how many unique taxa? length(unique(nymphalidae$scientific_name)) #> [1] 81 monarch_chrysalis <- get_inat_obs(taxon_name = \"Danaus plexippus\", query = \"chrysalis\")"},{"path":"https://docs.ropensci.org/rinat/articles/rinat-intro.html","id":"bounding-box-search","dir":"Articles","previous_headings":"Quickstart guide > Get observations","what":"Bounding box search","title":"Access iNaturalist data through APIs","text":"can also search within bounding box giving simple set coordinates.","code":"## Search by area bounds <- c(38.44047, -125, 40.86652, -121.837) deer <- get_inat_obs(query = \"Mule Deer\", bounds = bounds) plot(deer$longitude, deer$latitude)"},{"path":[]},{"path":"https://docs.ropensci.org/rinat/articles/rinat-intro.html","id":"get-information-and-observations-by-project","dir":"Articles","previous_headings":"Quickstart guide > Other functions","what":"Get information and observations by project","title":"Access iNaturalist data through APIs","text":"can get observations project know ID name iNaturalist slug.","code":"## Just get info about a project vt_crows <- get_inat_obs_project(\"crows-in-vermont\", type = \"info\", raw = FALSE) #> 206 records ## Now get all the observations for that project vt_crows_obs <- get_inat_obs_project(vt_crows$id, type = \"observations\") #> 206 records #> Getting records 0-200 #> Getting records up to 400 #> Done. #> Note: mismatch between number of observations reported and returned by the API."},{"path":"https://docs.ropensci.org/rinat/articles/rinat-intro.html","id":"get-observation-details","dir":"Articles","previous_headings":"Quickstart guide > Other functions","what":"Get observation details","title":"Access iNaturalist data through APIs","text":"Detailed information specific observation can retrieved observation ID. easiest way get ID previous search taxon.","code":"head(get_inat_obs_id(monarch_chrysalis$id[1])) #> $id #> [1] 121193310 #>  #> $observed_on #> [1] \"2022-06-09\" #>  #> $description #> [1] \"Hatched on 5/21, formed J and chrysalis both on 6/9 within about 12 hours, host was Asclepias syriaca\" #>  #> $latitude #> [1] \"38.6252520294\" #>  #> $longitude #> [1] \"-90.3803088003\" #>  #> $map_scale #> NULL"},{"path":"https://docs.ropensci.org/rinat/articles/rinat-intro.html","id":"get-all-observations-by-user","dir":"Articles","previous_headings":"Quickstart guide > Other functions","what":"Get all observations by user","title":"Access iNaturalist data through APIs","text":"just want observations user can download observations user ID. word warning though, can quite large (easily 1000’s).","code":"user_obs <- get_inat_obs_user(monarch_chrysalis$user_login[1], maxresults = 20) head(user_obs)[,1:5] #>                scientific_name                  datetime                description #> 1                     Baptisia 2022-06-07 19:16:13 -0500   Large cultivar planting  #> 2                        Salix 2022-06-07 18:45:13 -0500             Dixon Prairie  #> 3        Tradescantia ohiensis 2022-06-07 18:46:09 -0500             Dixon Prairie  #> 4             Silene latifolia 2022-06-07 18:46:31 -0500             Dixon Prairie  #> 5                   Neuroterus 2022-06-07 18:48:00 -0500 Host plant Quercus bicolor #> 6 Symphyotrichum novae-angliae 2022-06-07 18:51:00 -0500             Dixon Prairie  #>                               place_guess latitude #> 1 Chicago Botanic Garden, Glencoe, IL, US 42.14471 #> 2 Chicago Botanic Garden, Glencoe, IL, US 42.14246 #> 3 Chicago Botanic Garden, Glencoe, IL, US 42.14241 #> 4 Chicago Botanic Garden, Glencoe, IL, US 42.14238 #> 5 Chicago Botanic Garden, Glencoe, IL, US 42.14238 #> 6 Chicago Botanic Garden, Glencoe, IL, US 42.14263"},{"path":"https://docs.ropensci.org/rinat/articles/rinat-intro.html","id":"stats-by-taxa","dir":"Articles","previous_headings":"Quickstart guide > Other functions","what":"Stats by taxa","title":"Access iNaturalist data through APIs","text":"Basic statistics available taxa counts date, date range, place ID (numeric ID), user ID (string). top 5 species listed.","code":"## By date counts <- get_inat_taxon_stats(date = \"2020-06-14\") counts$total #> [1] 25763 ### Top 5 species counts$species_counts #>   count taxon.id           taxon.name taxon.rank taxon.rank_level taxon.default_name.id #> 1   380    48484    Harmonia axyridis    species               10                 89147 #> 2   332    56057 Leucanthemum vulgare    species               10                924783 #> 3   330    52821 Achillea millefolium    species               10                942097 #> 4   319    51875   Trifolium pratense    species               10                942055 #> 5   304    55745     Trifolium repens    species               10                943715 #>   taxon.default_name.name taxon.default_name.is_valid taxon.default_name.lexicon #> 1       Asian Lady Beetle                        TRUE                    English #> 2             oxeye daisy                        TRUE                    English #> 3           Common Yarrow                        TRUE                    English #> 4              red clover                        TRUE                    English #> 5            white clover                        TRUE                    English #>                                                             taxon.image_url taxon.iconic_taxon_name #> 1                 https://static.inaturalist.org/photos/30978499/square.jpg                 Insecta #> 2 https://inaturalist-open-data.s3.amazonaws.com/photos/71002344/square.jpg                 Plantae #> 3     https://inaturalist-open-data.s3.amazonaws.com/photos/4902/square.jpg                 Plantae #> 4                 https://static.inaturalist.org/photos/38032773/square.jpg                 Plantae #> 5 https://inaturalist-open-data.s3.amazonaws.com/photos/86716150/square.jpg                 Plantae #>   taxon.conservation_status_name #> 1                           <NA> #> 2                           <NA> #> 3                  least_concern #> 4                  least_concern #> 5                           <NA> ### Most common taxon ranks counts$rank_counts #> $species #> [1] 18886 #>  #> $genus #> [1] 3645 #>  #> $subspecies #> [1] 758 #>  #> $family #> [1] 611 #>  #> $subfamily #> [1] 373 #>  #> $tribe #> [1] 338 #>  #> $variety #> [1] 233 #>  #> $subgenus #> [1] 159 #>  #> $order #> [1] 120 #>  #> $hybrid #> [1] 95 #>  #> $superfamily #> [1] 85 #>  #> $section #> [1] 84 #>  #> $subtribe #> [1] 80 #>  #> $complex #> [1] 76 #>  #> $class #> [1] 39 #>  #> $suborder #> [1] 39 #>  #> $infraorder #> [1] 29 #>  #> $phylum #> [1] 22 #>  #> $subclass #> [1] 20 #>  #> $form #> [1] 12 #>  #> $subsection #> [1] 9 #>  #> $subphylum #> [1] 8 #>  #> $infraclass #> [1] 6 #>  #> $kingdom #> [1] 5 #>  #> $superorder #> [1] 4 #>  #> $genushybrid #> [1] 3 #>  #> $zoosection #> [1] 3 #>  #> $epifamily #> [1] 2 #>  #> $subterclass #> [1] 2 #>  #> $zoosubsection #> [1] 2"},{"path":"https://docs.ropensci.org/rinat/articles/rinat-intro.html","id":"stats-by-user","dir":"Articles","previous_headings":"Quickstart guide > Other functions","what":"Stats by user","title":"Access iNaturalist data through APIs","text":"Similar statistics can gotten users. input parameters can used.","code":"## By date counts <- get_inat_user_stats(date = \"2010-06-14\") counts$total #> [1] 341 counts$most_observations[1:10,] #>    count user.id      user.login       user.name #> 1    129  245282  hughmcguinness Hugh McGuinness #> 2     53  811118     sandbankspp                 #> 3     50 3334393 koniakin_serhii Serhii Koniakin #> 4     34  541847      billhubick     Bill Hubick #> 5     31    6930       tgosliner  Terry Gosliner #> 6     31 2883853      linkmdavis      Link Davis #> 7     30   46945             abe    T. Abe Lloyd #> 8     26  280446         mtjones      Mike Jones #> 9     25  761669 kathleenfspicer            <NA> #> 10    21    2616     alice_abela     Alice Abela #>                                                                     user.user_icon_url #> 1   https://static.inaturalist.org/attachments/users/icons/245282/thumb.jpg?1475532481 #> 2  https://static.inaturalist.org/attachments/users/icons/811118/thumb.jpeg?1535236899 #> 3  https://static.inaturalist.org/attachments/users/icons/3334393/thumb.jpg?1650572950 #> 4   https://static.inaturalist.org/attachments/users/icons/541847/thumb.jpg?1582771190 #> 5     https://static.inaturalist.org/attachments/users/icons/6930/thumb.jpg?1475530872 #> 6  https://static.inaturalist.org/attachments/users/icons/2883853/thumb.jpg?1647293664 #> 7    https://static.inaturalist.org/attachments/users/icons/46945/thumb.jpg?1624289207 #> 8   https://static.inaturalist.org/attachments/users/icons/280446/thumb.jpg?1635600681 #> 9                                                                                 <NA> #> 10    https://static.inaturalist.org/attachments/users/icons/2616/thumb.jpg?1475528533 counts$most_species[1:10,] #>    count user.id      user.login           user.name #> 1     89  245282  hughmcguinness     Hugh McGuinness #> 2     47  811118     sandbankspp                     #> 3     36 3334393 koniakin_serhii     Serhii Koniakin #> 4     25    6930       tgosliner      Terry Gosliner #> 5     24   46945             abe        T. Abe Lloyd #> 6     24  761669 kathleenfspicer                <NA> #> 7     17    2616     alice_abela         Alice Abela #> 8     17  495266        maxa11an Max Allan Niklasson #> 9     17  541847      billhubick         Bill Hubick #> 10    15  280446         mtjones          Mike Jones #>                                                                     user.user_icon_url #> 1   https://static.inaturalist.org/attachments/users/icons/245282/thumb.jpg?1475532481 #> 2  https://static.inaturalist.org/attachments/users/icons/811118/thumb.jpeg?1535236899 #> 3  https://static.inaturalist.org/attachments/users/icons/3334393/thumb.jpg?1650572950 #> 4     https://static.inaturalist.org/attachments/users/icons/6930/thumb.jpg?1475530872 #> 5    https://static.inaturalist.org/attachments/users/icons/46945/thumb.jpg?1624289207 #> 6                                                                                 <NA> #> 7     https://static.inaturalist.org/attachments/users/icons/2616/thumb.jpg?1475528533 #> 8  https://static.inaturalist.org/attachments/users/icons/495266/thumb.jpeg?1579782546 #> 9   https://static.inaturalist.org/attachments/users/icons/541847/thumb.jpg?1582771190 #> 10  https://static.inaturalist.org/attachments/users/icons/280446/thumb.jpg?1635600681 ## By place_ID vt_crows <- get_inat_obs_project(\"crows-in-vermont\", type = \"info\", raw = FALSE) #> 206 records place_counts <- get_inat_user_stats(place = vt_crows$place_id) place_counts$total #> [1] 19115 place_counts$most_observations[1:10,] #>    count user.id    user.login       user.name #> 1  89462   12158 erikamitchell  Erika Mitchell #> 2  41524    2179       charlie    Charlie Hohn #> 3  21073   12610  susanelliott   Susan Elliott #> 4  12368   20198 joshualincoln  Joshua Lincoln #> 5  11978   12045      larry522  Larry Clarfeld #> 6  11906 1168695       trscavo       Tom Scavo #> 7  10906  171529        nsharp Nathaniel Sharp #> 8  10848    6624   joannerusso                 #> 9  10444  108365     judywelna                 #> 10  9906     317   kpmcfarland  Kent McFarland #>                                                                     user.user_icon_url #> 1    https://static.inaturalist.org/attachments/users/icons/12158/thumb.jpg?1586465563 #> 2     https://static.inaturalist.org/attachments/users/icons/2179/thumb.jpg?1569109298 #> 3    https://static.inaturalist.org/attachments/users/icons/12610/thumb.jpg?1475533475 #> 4    https://static.inaturalist.org/attachments/users/icons/20198/thumb.jpg?1475538276 #> 5    https://static.inaturalist.org/attachments/users/icons/12045/thumb.jpg?1475533238 #> 6  https://static.inaturalist.org/attachments/users/icons/1168695/thumb.png?1535480090 #> 7   https://static.inaturalist.org/attachments/users/icons/171529/thumb.jpg?1544399969 #> 8     https://static.inaturalist.org/attachments/users/icons/6624/thumb.jpg?1639690628 #> 9   https://static.inaturalist.org/attachments/users/icons/108365/thumb.jpg?1475547470 #> 10     https://static.inaturalist.org/attachments/users/icons/317/thumb.png?1634743248 place_counts$most_species[1:10,] #>    count user.id    user.login       user.name #> 1   3561   12158 erikamitchell  Erika Mitchell #> 2   2465   12610  susanelliott   Susan Elliott #> 3   2390   12045      larry522  Larry Clarfeld #> 4   2033    2179       charlie    Charlie Hohn #> 5   1926   13355        beeboy   Spencer Hardy #> 6   1877    6624   joannerusso                 #> 7   1854  171529        nsharp Nathaniel Sharp #> 8   1830   20198 joshualincoln  Joshua Lincoln #> 9   1754 2860446      er-birds                 #> 10  1550     317   kpmcfarland  Kent McFarland #>                                                                     user.user_icon_url #> 1    https://static.inaturalist.org/attachments/users/icons/12158/thumb.jpg?1586465563 #> 2    https://static.inaturalist.org/attachments/users/icons/12610/thumb.jpg?1475533475 #> 3    https://static.inaturalist.org/attachments/users/icons/12045/thumb.jpg?1475533238 #> 4     https://static.inaturalist.org/attachments/users/icons/2179/thumb.jpg?1569109298 #> 5    https://static.inaturalist.org/attachments/users/icons/13355/thumb.jpg?1475533838 #> 6     https://static.inaturalist.org/attachments/users/icons/6624/thumb.jpg?1639690628 #> 7   https://static.inaturalist.org/attachments/users/icons/171529/thumb.jpg?1544399969 #> 8    https://static.inaturalist.org/attachments/users/icons/20198/thumb.jpg?1475538276 #> 9  https://static.inaturalist.org/attachments/users/icons/2860446/thumb.jpg?1588019864 #> 10     https://static.inaturalist.org/attachments/users/icons/317/thumb.png?1634743248"},{"path":"https://docs.ropensci.org/rinat/articles/rinat-intro.html","id":"mapping","dir":"Articles","previous_headings":"Quickstart guide","what":"Mapping","title":"Access iNaturalist data through APIs","text":"Basic maps can created inat_map() function quickly visualize search results. plot = FALSE option can used avoid displaying initial plot customising ggplot2 functions.  inat_map() useful quickly mapping single-species data obtained rinat. However, complicated plots best made scratch. example customised map make use . (Note use quality = \"research\" restrict search reliable observations.)","code":"library(ggplot2)  ## Map 100 spotted salamanders a_mac <- get_inat_obs(taxon_name = \"Ambystoma maculatum\", year = 2021) salamander_map <- inat_map(a_mac, plot = FALSE)  ### Further customise the returned ggplot object salamander_map + borders(\"state\") + theme_bw() ## A more elaborate map of Colibri sp. colibri <- get_inat_obs(taxon_name = \"Colibri\",                         quality = \"research\",                         maxresults = 500) ggplot(data = colibri, aes(x = longitude,                          y = latitude,                          colour = scientific_name)) +   geom_polygon(data = map_data(\"world\"),                    aes(x = long, y = lat, group = group),                    fill = \"grey95\",                    color = \"gray40\",                    size = 0.1) +   geom_point(size = 0.7, alpha = 0.5) +   coord_fixed(xlim = range(colibri$longitude, na.rm = TRUE),               ylim = range(colibri$latitude, na.rm = TRUE)) +   theme_bw()"},{"path":"https://docs.ropensci.org/rinat/articles/species-distribution.html","id":"acquire-data","dir":"Articles","previous_headings":"","what":"Acquire data","title":"Worked Example: Species Distribution","text":"query uses quality = \"research\" parameter focus reliable data (.e. observations identified taxon several iNaturalist contributors, animals captivity). species listed?","code":"library(rinat) colibri <- get_inat_obs(taxon_name = \"Colibri\",                         quality = \"research\",                         maxresults = 1000) library(dplyr) colibri %>% pull(scientific_name) %>% unique() #> [1] \"Colibri cyanotus\"            \"Colibri coruscans\"           \"Colibri cyanotus cabanidis\"  #> [4] \"Colibri delphinae\"           \"Colibri thalassinus\"         \"Colibri serrirostris\"        #> [7] \"Colibri coruscans coruscans\""},{"path":"https://docs.ropensci.org/rinat/articles/species-distribution.html","id":"prepare-the-data","dir":"Articles","previous_headings":"","what":"Prepare the data","title":"Worked Example: Species Distribution","text":"can process data merge subspecies corresponding species, remove rows missing coordinates. Parsing date time observation can also useful.","code":"library(stringr) library(lubridate) col_sp <- colibri %>%    filter(!is.na(longitude)) %>%    mutate(scientific_name = word(scientific_name, 1, 2)) %>%    mutate(datetime = ymd_hms(datetime))"},{"path":"https://docs.ropensci.org/rinat/articles/species-distribution.html","id":"visualise","dir":"Articles","previous_headings":"","what":"Visualise","title":"Worked Example: Species Distribution","text":"histogram can useful get idea range dates. plot chunk date_hist Expectedly, observations mostly recent. Although earlier observations can submitted, iNaturalist launched 2008, means vast majority observations 2008. Let’s now visualise observations’ locations ggplot2. plot chunk viz_col Using ggforce’s geom_mark_*() functions, can highlight annotate different species directly plot. expand x y axes limits make space additions. plot chunk viz_col_annotated","code":"library(ggplot2) ggplot(col_sp, aes(x = datetime)) +   geom_histogram() ggplot(data = col_sp, aes(x = longitude,                          y = latitude,                          colour = scientific_name)) +   geom_polygon(data = map_data(\"world\"),                    aes(x = long, y = lat, group = group),                    fill = \"grey95\",                    color = \"gray40\",                    size = 0.1) +   geom_point(size = 0.7, alpha = 0.5) +   # this guarantees the map is not stretched   coord_fixed(xlim = range(col_sp$longitude),               ylim = range(col_sp$latitude)) +   theme_bw() # define expansion factors for giving space to ellipses and labels exp_fact <- c(0.5, 0.5) library(ggforce) ggplot(data = col_sp, aes(x = longitude,                          y = latitude,                          colour = scientific_name)) +   geom_polygon(data = map_data(\"world\"),                    aes(x = long, y = lat, group = group),                    fill = \"grey95\",                    color = \"gray40\",                    size = 0.1) +   geom_point(size = 0.7, alpha = 0.5) +   # annotate with a hulls and labels   geom_mark_hull(aes(label = scientific_name,                      fill = scientific_name),                  expand = unit(1, \"mm\"),                  radius = unit(1, \"mm\"),                  label.fill = \"transparent\") +   # expand axes here   scale_x_continuous(expand = exp_fact) +   scale_y_continuous(expand = exp_fact) +   coord_fixed(xlim = range(col_sp$longitude),               ylim = range(col_sp$latitude)) +   theme_bw() +   # remove the superfluous legend   theme(legend.position = \"none\")"},{"path":"https://docs.ropensci.org/rinat/articles/species-distribution.html","id":"remove-outliers","dir":"Articles","previous_headings":"","what":"Remove outliers","title":"Worked Example: Species Distribution","text":"observations misidentified, misplaced, simply exception representative common range species. One way remove outliers compute observation distance nearest observation belonging species. , first convert sf object, split separate species, use functions st_nearest_feature() identify closest feature st_distance() compute distance. Let’s highlight observations least 1000 km away another observation species: plot chunk show_distant can now reuse visualisation code , outliers filtered : plot chunk viz_col_clean Note outlier detection method always useful. example, one outlier specimen recorded several separate observations, therefore wouldn’t filtered based distance.","code":"library(sf) library(purrr) col_dist <- col_sp %>%    st_as_sf(coords = c(\"longitude\", \"latitude\"), crs = \"WGS84\") %>%    split(.$scientific_name) %>%    map_dfr(~ mutate(.x,                    nearest_id = st_nearest_feature(.x),                    nearest = geometry[nearest_id],                    dist_nearest = st_distance(geometry, nearest, by_element = TRUE))) ggplot(data = col_dist, aes(colour = scientific_name)) +   geom_sf() +   geom_sf(data = col_dist %>% filter(as.integer(dist_nearest) > 1e6),           colour = \"red\", size = 5, shape = 1) col_clean <- col_sp %>%   anti_join(col_dist %>% filter(as.integer(dist_nearest) > 1e6),             by = \"id\") # filter outliers out ggplot(col_clean, aes(x = longitude, y = latitude,              colour = scientific_name)) +   geom_polygon(data = map_data(\"world\"),                    aes(x = long, y = lat, group = group),                    fill = \"grey95\",                    color = \"gray40\",                    size = 0.1) +   geom_point(size = 0.7, alpha = 0.5) +   geom_mark_hull(aes(label = scientific_name,                      fill = scientific_name),                  expand = unit(1, \"mm\"),                  radius = unit(1, \"mm\"),                  label.fill = \"transparent\") +   scale_x_continuous(expand = exp_fact) +   scale_y_continuous(expand = exp_fact) +   coord_fixed(xlim = range(col_clean$longitude),               ylim = range(col_clean$latitude)) +   theme_bw() +   theme(legend.position = \"none\")"},{"path":"https://docs.ropensci.org/rinat/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Vijay Barve. Author. Edmund Hart. Author. Stéphane Guillou. Maintainer.","code":""},{"path":"https://docs.ropensci.org/rinat/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Barve V, Hart E (2024). rinat: Access 'iNaturalist' Data APIs. R package version 0.1.9https://docs.ropensci.org/rinat/ (website) https://github.com/ropensci/rinat (devel), https://docs.ropensci.org/rinat/ (website)https://github.com/ropensci/rinat (devel).","code":"@Manual{,   title = {rinat: Access 'iNaturalist' Data Through APIs},   author = {Vijay Barve and Edmund Hart},   year = {2024},   note = {R package version 0.1.9https://docs.ropensci.org/rinat/ (website) https://github.com/ropensci/rinat (devel)},   url = {https://docs.ropensci.org/rinat/ (website) https://github.com/ropensci/rinat (devel)}, }"},{"path":"https://docs.ropensci.org/rinat/index.html","id":"rinat-access-inaturalist-data-with-r","dir":"","previous_headings":"","what":"Access iNaturalist Data Through APIs","title":"Access iNaturalist Data Through APIs","text":"Edmund Hart, Stéphane Guillou  R wrapper iNaturalist APIs accessing observations. detailed documentation API available iNaturalist website part larger species occurrence searching packages SPOCC.","code":""},{"path":"https://docs.ropensci.org/rinat/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Access iNaturalist Data Through APIs","text":"can install latest version available CRAN : Alternatively, can install development version Github :","code":"install.packages(\"rinat\") remotes::install_github(\"ropensci/rinat\")"},{"path":[]},{"path":"https://docs.ropensci.org/rinat/index.html","id":"get-observations","dir":"","previous_headings":"Usage","what":"Get observations","title":"Access iNaturalist Data Through APIs","text":"get_inat_obs() primary function retrieves observations iNaturalist. text taxon search can refined observation date, record quality location. recommended set quality argument \"research\" order get reliable data validated several contributors.","code":""},{"path":"https://docs.ropensci.org/rinat/index.html","id":"taxon-search","dir":"","previous_headings":"Usage > Get observations","what":"Taxon search","title":"Access iNaturalist Data Through APIs","text":"return records specific species taxonomic group, use taxon_name argument. example, return observations anything Nymphalidae family, restricting search year 2015: Note get_inat_obs() return 100 observations default. can controlled maxresults argument.","code":"library(rinat) nymphalidae <- get_inat_obs(taxon_name  = \"Nymphalidae\", year = 2015) # how many unique taxa? length(unique(nymphalidae$scientific_name)) ## [1] 72"},{"path":"https://docs.ropensci.org/rinat/index.html","id":"text-search","dir":"","previous_headings":"Usage > Get observations","what":"Text search","title":"Access iNaturalist Data Through APIs","text":"can also search observations string. search entire iNaturalist database, search return entries mention Monarch butterflies, just Monarch observations. can combine fuzzy search precise taxon search. example, get Monarch butterfly observations also mention term “chrysalis”:","code":"monarchs <- get_inat_obs(query = \"Monarch Butterfly\", year = 2021) # which taxa were returned? unique(monarchs$scientific_name) ## [1] \"Danaus plexippus\" \"Danaina\" monarch_chrysalis <- get_inat_obs(taxon_name = \"Danaus plexippus\", query = \"chrysalis\")"},{"path":"https://docs.ropensci.org/rinat/index.html","id":"bounding-box-search","dir":"","previous_headings":"Usage > Get observations","what":"Bounding box search","title":"Access iNaturalist Data Through APIs","text":"can also search within bounding box giving simple set coordinates.","code":"## Search by area bounds <- c(38.44047, -125, 40.86652, -121.837) deer <- get_inat_obs(query = \"Mule Deer\", bounds = bounds) plot(deer$longitude, deer$latitude)"},{"path":"https://docs.ropensci.org/rinat/index.html","id":"other-functions","dir":"","previous_headings":"Usage","what":"Other functions","title":"Access iNaturalist Data Through APIs","text":"functions available, notably access: observations project get_inat_obs_project() details single observation get_inat_obs_id() observations single user get_inat_obs_user() taxa statistics get_inat_taxon_stats() user statistics get_inat_user_stats() detailed examples included vignette:","code":"vignette(\"rinat-intro\", package = \"rinat\")"},{"path":"https://docs.ropensci.org/rinat/index.html","id":"mapping","dir":"","previous_headings":"Usage > Other functions","what":"Mapping","title":"Access iNaturalist Data Through APIs","text":"Basic maps can created inat_map() function quickly visualize search results. plot = FALSE option can used avoid displaying initial plot customising ggplot2 functions.  inat_map() useful quickly mapping single-species data obtained rinat. However, complicated plots best made scratch. example customised map make use . (Note use quality = \"research\" restrict search reliable observations.)","code":"library(ggplot2)  ## Map 100 spotted salamanders a_mac <- get_inat_obs(taxon_name = \"Ambystoma maculatum\", year = 2021) salamander_map <- inat_map(a_mac, plot = FALSE)  ### Further customise the returned ggplot object salamander_map + borders(\"state\") + theme_bw() ## A more elaborate map of Colibri sp. colibri <- get_inat_obs(taxon_name = \"Colibri\",                         quality = \"research\",                         maxresults = 500) ggplot(data = colibri, aes(x = longitude,                          y = latitude,                          colour = scientific_name)) +   geom_polygon(data = map_data(\"world\"),                    aes(x = long, y = lat, group = group),                    fill = \"grey95\",                    color = \"gray40\",                    size = 0.1) +   geom_point(size = 0.7, alpha = 0.5) +   coord_fixed(xlim = range(colibri$longitude, na.rm = TRUE),               ylim = range(colibri$latitude, na.rm = TRUE)) +   theme_bw()"},{"path":"https://docs.ropensci.org/rinat/reference/get_inat_obs.html","id":null,"dir":"Reference","previous_headings":"","what":"Download iNaturalist data — get_inat_obs","title":"Download iNaturalist data — get_inat_obs","text":"Primary function retrieve observations iNaturalist, allows users search data, just filter results subset offered API.","code":""},{"path":"https://docs.ropensci.org/rinat/reference/get_inat_obs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download iNaturalist data — get_inat_obs","text":"","code":"get_inat_obs(   query = NULL,   taxon_name = NULL,   taxon_id = NULL,   place_id = NULL,   quality = NULL,   geo = NULL,   annotation = NULL,   year = NULL,   month = NULL,   day = NULL,   bounds = NULL,   maxresults = 100,   meta = FALSE )"},{"path":"https://docs.ropensci.org/rinat/reference/get_inat_obs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download iNaturalist data — get_inat_obs","text":"query Query string general search. taxon_name Filter iNat taxon name. Note also select observations descendant taxa. Note names unique, name matches multiple taxa, observations may returned. taxon_id Filter iNat taxon ID. Note also select observations descendant taxa. place_id Filter iNat place ID. quality quality grade used.  Must either \"casual\" \"research\".  left blank returned. geo Flag returning results georeferenced, TRUE exclude non-georeferenced results, excluded. annotation Filter annotation. Vector length 2, first  element term ID (e.g. \"1\" life stage) second  element value ID (e.g. \"2\" adult). Refer  annotation documentation know values use. year Return observations year (can one year, range years). month Return observations month, must numeric, 1...12 day Return observations given day month,  1...31 bounds bounding box longitude (-180 180) latitude (-90 90) search within.  vector form southern latitude, western longitude, northern latitude, eastern longitude. Alternatively supply sf sp object bounding box derived. maxresults maximum number results return. number higher 10000. meta (logical) TRUE, output function list metadata output data.frame data. FALSE (default), just data.frame.","code":""},{"path":"https://docs.ropensci.org/rinat/reference/get_inat_obs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download iNaturalist data — get_inat_obs","text":"dataframe number observations requested.","code":""},{"path":"https://docs.ropensci.org/rinat/reference/get_inat_obs.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Download iNaturalist data — get_inat_obs","text":"Filtering always work query parameter reason (problem API end).  want filter time, best use scientific name put 'taxa' field, query field.  Another issue query parameter search entire entry, possible get unintended results.  Depending use case may advisable use \"taxon\" field instead query field.","code":""},{"path":"https://docs.ropensci.org/rinat/reference/get_inat_obs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download iNaturalist data — get_inat_obs","text":"","code":"if (FALSE) {   ## Make a standard query   get_inat_obs(query = \"Monarch Butterfly\")      ## Restrict to juveniles thanks to annotations   get_inat_obs(query = \"possum\", annotation = c(1, 8))    ## Filter by a bounding box of Northern California   bounds <- c(38.44047, -125, 40.86652, -121.837)   get_inat_obs(query = \"Mule Deer\", bounds = bounds)    ## Filter by taxon, allows higher order filtering,   ## Here we can search for just stone flies (order Plecoptera)   get_inat_obs(taxon_name = \"Plecoptera\")    ## Get metadata (the number of results found on the server)   out <- get_inat_obs(query = \"Monarch Butterfly\", meta = TRUE)   out$meta }"},{"path":"https://docs.ropensci.org/rinat/reference/get_inat_obs_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Get information on a specific observation — get_inat_obs_id","title":"Get information on a specific observation — get_inat_obs_id","text":"Get information specific observation","code":""},{"path":"https://docs.ropensci.org/rinat/reference/get_inat_obs_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get information on a specific observation — get_inat_obs_id","text":"","code":"get_inat_obs_id(id)"},{"path":"https://docs.ropensci.org/rinat/reference/get_inat_obs_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get information on a specific observation — get_inat_obs_id","text":"id single id iNaturalist observation record","code":""},{"path":"https://docs.ropensci.org/rinat/reference/get_inat_obs_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get information on a specific observation — get_inat_obs_id","text":"list full details given record","code":""},{"path":"https://docs.ropensci.org/rinat/reference/get_inat_obs_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get information on a specific observation — get_inat_obs_id","text":"","code":"if (FALSE) { m_obs <- get_inat_obs(query=\"Monarch Butterfly\") get_inat_obs_id(m_obs$id[1]) }"},{"path":"https://docs.ropensci.org/rinat/reference/get_inat_obs_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Download observations or info from a project — get_inat_obs_project","title":"Download observations or info from a project — get_inat_obs_project","text":"Retrieve observations particular iNaturalist project. function can used get either observations information project project name ID.","code":""},{"path":"https://docs.ropensci.org/rinat/reference/get_inat_obs_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download observations or info from a project — get_inat_obs_project","text":"","code":"get_inat_obs_project(grpid, type = c(\"observations\", \"info\"), raw = FALSE)"},{"path":"https://docs.ropensci.org/rinat/reference/get_inat_obs_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download observations or info from a project — get_inat_obs_project","text":"grpid Name group iNaturalist slug group ID. type Character, either \"observations\" \"info\". \"observations\" returns observations, \"info\" returns project details similar can find project's page. raw Logical. TRUE searching project info, returns raw output parsed JSON project. Otherwise just basic information returned list.","code":""},{"path":"https://docs.ropensci.org/rinat/reference/get_inat_obs_project.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download observations or info from a project — get_inat_obs_project","text":"iNaturalist slug usually project name single string words separated hyphens. instance, project \"World Oceans Week 2022\" slug \"world-oceans-week-2022\", can find searching projects iNaturalist looking project's page's URL.","code":""},{"path":"https://docs.ropensci.org/rinat/reference/get_inat_obs_project.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download observations or info from a project — get_inat_obs_project","text":"","code":"if (FALSE) {  get_inat_obs_project(354, type = \"observations\")  get_inat_obs_project(\"crows-in-vermont\", type=\"info\",raw=FALSE) }"},{"path":"https://docs.ropensci.org/rinat/reference/get_inat_obs_user.html","id":null,"dir":"Reference","previous_headings":"","what":"Download observations for a user — get_inat_obs_user","title":"Download observations for a user — get_inat_obs_user","text":"Get observations specific iNaturalist user.","code":""},{"path":"https://docs.ropensci.org/rinat/reference/get_inat_obs_user.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download observations for a user — get_inat_obs_user","text":"","code":"get_inat_obs_user(username, maxresults = 100)"},{"path":"https://docs.ropensci.org/rinat/reference/get_inat_obs_user.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download observations for a user — get_inat_obs_user","text":"username username iNaturalist user fetch records maxresults maximum number results return","code":""},{"path":"https://docs.ropensci.org/rinat/reference/get_inat_obs_user.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download observations for a user — get_inat_obs_user","text":"list full details given record","code":""},{"path":"https://docs.ropensci.org/rinat/reference/get_inat_obs_user.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download observations for a user — get_inat_obs_user","text":"","code":"if (FALSE) {   m_obs <- get_inat_obs(query=\"Monarch Butterfly\")   get_inat_obs_user(as.character(m_obs$user_login[1])) }"},{"path":"https://docs.ropensci.org/rinat/reference/get_inat_taxon_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Get stats on taxon counts — get_inat_taxon_stats","title":"Get stats on taxon counts — get_inat_taxon_stats","text":"Get stats taxa within constrained range. range can user, place, project, day date range. Output count total number taxa observed taxonomic level.","code":""},{"path":"https://docs.ropensci.org/rinat/reference/get_inat_taxon_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get stats on taxon counts — get_inat_taxon_stats","text":"","code":"get_inat_taxon_stats(   date = NULL,   date_range = NULL,   place = NULL,   project = NULL,   uid = NULL )"},{"path":"https://docs.ropensci.org/rinat/reference/get_inat_taxon_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get stats on taxon counts — get_inat_taxon_stats","text":"date Retrieve observations specific date. Must string form \"YYYY-MM-DD\". date_range vector two dates defining date range, form \"YYYY-MM-DD\". place Get taxon stats place. can find place IDs iNaturalist website. Must numeric ID. project Get taxon stats project's numeric ID. uid Get taxon stats user ID (string).","code":""},{"path":"https://docs.ropensci.org/rinat/reference/get_inat_taxon_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get stats on taxon counts — get_inat_taxon_stats","text":"vector listing counts observations level identification possible (species, genus, etc.)","code":""},{"path":"https://docs.ropensci.org/rinat/reference/get_inat_taxon_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get stats on taxon counts — get_inat_taxon_stats","text":"","code":"if (FALSE) {  counts <- get_inat_taxon_stats(date = \"2010-06-14\") }"},{"path":"https://docs.ropensci.org/rinat/reference/get_inat_user_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Get stats on users — get_inat_user_stats","title":"Get stats on users — get_inat_user_stats","text":"Get stats users reported species observations within given range. range can user, place, project, day date range. Output count total number taxa observed taxonomic level.","code":""},{"path":"https://docs.ropensci.org/rinat/reference/get_inat_user_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get stats on users — get_inat_user_stats","text":"","code":"get_inat_user_stats(   date = NULL,   date_range = NULL,   place = NULL,   project = NULL,   uid = NULL )"},{"path":"https://docs.ropensci.org/rinat/reference/get_inat_user_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get stats on users — get_inat_user_stats","text":"date Retrieve observations specific date. Must string form \"YYYY-MM-DD\". date_range vector dates defining range, form \"YYYY-MM-DD\". place Get taxon stats place. can find place IDs iNaturalist website. Must numeric ID. project Get taxon stats project's numeric ID. uid Get taxon stats user ID (string).","code":""},{"path":"https://docs.ropensci.org/rinat/reference/get_inat_user_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get stats on users — get_inat_user_stats","text":"list containing two data.frames, users sorted either number observations number species observed.","code":""},{"path":"https://docs.ropensci.org/rinat/reference/get_inat_user_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get stats on users — get_inat_user_stats","text":"","code":"if (FALSE) {  counts <- get_inat_user_stats(date = \"2010-06-14\") }"},{"path":"https://docs.ropensci.org/rinat/reference/inat_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot iNaturalist observations — inat_map","title":"Plot iNaturalist observations — inat_map","text":"Plot observations iNaturalist. option automatically plotting, returning ggplot map object can add layers onto.","code":""},{"path":"https://docs.ropensci.org/rinat/reference/inat_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot iNaturalist observations — inat_map","text":"","code":"inat_map(data, map = \"usa\", subregion = \".\", plot = TRUE)"},{"path":"https://docs.ropensci.org/rinat/reference/inat_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot iNaturalist observations — inat_map","text":"data data frame iNaturalist observations. map map region plot, can find full documentation map package, default USA. subregion name subregion plot, see full documentation map package. plot logical value. TRUE plots map object returns , FALSE returns ggplot object can modify plot later.","code":""},{"path":"https://docs.ropensci.org/rinat/reference/inat_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot iNaturalist observations — inat_map","text":"ggplot map object.","code":""},{"path":"https://docs.ropensci.org/rinat/reference/inat_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot iNaturalist observations — inat_map","text":"","code":"if (FALSE) {   m_obs <- get_inat_obs(taxon_name = \"Ambystoma maculatum\")   salamander_map <- inat_map(m_obs, plot = FALSE)   ### Now we can modify the returned map   salamander_map + borders(\"state\") + theme_bw() }"},{"path":"https://docs.ropensci.org/rinat/news/index.html","id":"rinat-019","dir":"Changelog","previous_headings":"","what":"rinat 0.1.9","title":"rinat 0.1.9","text":"CRAN release: 2022-06-14","code":""},{"path":"https://docs.ropensci.org/rinat/news/index.html","id":"new-features-0-1-9","dir":"Changelog","previous_headings":"","what":"New features","title":"rinat 0.1.9","text":"New annotation argument get_inat_obs() filter annotation, e.g. life stage, sex phenology. See available annotations. (#53) New vignette demonstrating processing visualising data species distribution: vignette(\"species-distribution\")","code":""},{"path":"https://docs.ropensci.org/rinat/news/index.html","id":"others-0-1-9","dir":"Changelog","previous_headings":"","what":"Others","title":"rinat 0.1.9","text":"Fix test error reaching observation limit Use .Rmd.orig technique avoid issues CRAN tests vignette code","code":""},{"path":"https://docs.ropensci.org/rinat/news/index.html","id":"rinat-018","dir":"Changelog","previous_headings":"","what":"rinat 0.1.8","title":"rinat 0.1.8","text":"CRAN release: 2021-03-08 Properly cater mismatch project observation numbers stay CRAN (attempt previous version cover cases) Improve console messages get_inat_obs_project() Skip tests use iNaturalist API CRAN Don’t error iNaturalist Internet available, per CRAN Repository Policies (#49)","code":""},{"path":"https://docs.ropensci.org/rinat/news/index.html","id":"rinat-017","dir":"Changelog","previous_headings":"","what":"rinat 0.1.7","title":"rinat 0.1.7","text":"CRAN release: 2021-02-19 Cater corner case mismatch project’s reported number observations actual number observations returned produced error merging data frames get_inat_obs_project()","code":""},{"path":"https://docs.ropensci.org/rinat/news/index.html","id":"rinat-016","dir":"Changelog","previous_headings":"","what":"rinat 0.1.6","title":"rinat 0.1.6","text":"CRAN release: 2020-10-14 New maintainer: Stéphane Guillou (@stragu) Improve documentation Clean code according CRAN feedback Note 0.1.x versions rinat fix existing issues, move new iNaturalist API version 0.2 (likely introduce breaking changes).","code":""},{"path":"https://docs.ropensci.org/rinat/news/index.html","id":"new-features-0-1-6","dir":"Changelog","previous_headings":"","what":"New features","title":"rinat 0.1.6","text":"get_inat_obs() can now use objects class Spatial sf bounding box (#38, @Martin-Jung #40, @LDalby; fixes #30) Allow use iNat place_id searching observations (commit 1d7f14f, @LDalby)","code":""},{"path":"https://docs.ropensci.org/rinat/news/index.html","id":"bug-fixes-0-1-6","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"rinat 0.1.6","text":"Lower result number limit bounding box present (#20) Fix result pagination get_obs_project() cases number results multiple 100 (#1, @vijaybarve) Stop get_inat_obs() search parameter(s) provided (#32, @LDalby) Avoid API error limiting search results 10000 (#32, @LDalby) Fix argument name inat_handle() (#32, @LDalby) Use JSON endpoint instead CSV avoid get_inat_obs_project() failing projects (#35, @LDalby #38, @Martin-Jung; fixes #28 #37) Fix code according devtools::check() feedback preparation CRAN release","code":""},{"path":"https://docs.ropensci.org/rinat/news/index.html","id":"rinat-015","dir":"Changelog","previous_headings":"","what":"rinat 0.1.5","title":"rinat 0.1.5","text":"CRAN release: 2017-03-10","code":""},{"path":"https://docs.ropensci.org/rinat/news/index.html","id":"bug-fixes-0-1-5","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"rinat 0.1.5","text":"Fixed bug error occurred >20K records requested code now throws warning hammer API Fixed warning thrown building vignettes Linux systems Fixed bug example code parameter names different actual parameter names","code":""},{"path":"https://docs.ropensci.org/rinat/news/index.html","id":"new-features-0-1-5","dir":"Changelog","previous_headings":"","what":"New features","title":"rinat 0.1.5","text":"Added NEWS file. Added full suite tests Added new vignette builds markdown hacky prebuilt PDF","code":""}]
